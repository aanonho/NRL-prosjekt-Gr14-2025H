<!-- Skjema for hinderregistrering med Leaflet-kart.
     Lat/Lng fra kartklikk eller nettleserens geolokasjon (auto-sentrering ved tillatelse). -->
@model WebApplication1.Models.ObstacleData

@{
    ViewData["Title"] = "Obstacle Registration";
}

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
      integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
      crossorigin="" />

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
        crossorigin=""></script>

<div class="container mx-auto px-4 mt-6">
    <h1 class="text-2xl sm:text-3xl font-bold mb-6 text-center">Obstacle Registration Form</h1>

    <!-- Dropdown for å velge figur -->
    <div class="mb-4">
        <label for="shapeSelect" class="block mb-1 font-medium text-gray-700">Select shape to add:</label>
        <select id="shapeSelect" class="w-full border border-gray-300 rounded p-2">
            <option value="marker">Marker</option>
            <option value="circle">Circle</option>
            <option value="line">Line</option>
        </select>
    </div>

    <!-- Kart -->
    <div id="map" class="w-full h-96 sm:h-80 mb-6 rounded border-2 border-gray-300"></div>

    <!-- Skjema -->
    <form asp-controller="Obstacle" asp-action="DataForm" method="post" class="grid grid-cols-1 sm:grid-cols-2 gap-4">

        <div>
            <label asp-for="ObstacleName" class="block mb-1 font-medium text-gray-700">Obstacle Name</label>
            <input asp-for="ObstacleName" class="w-full border border-gray-300 rounded p-2" />
            <span asp-validation-for="ObstacleName" class="text-red-500"></span>
            <p class="text-sm text-gray-500">Obstacle Name must be between 3 and 100 characters.</p>
        </div>

        <div>
            <label asp-for="ObstacleHeight" class="block mb-1 font-medium text-gray-700">Obstacle Height (meters)</label>
            <input asp-for="ObstacleHeight" class="w-full border border-gray-300 rounded p-2" />
            <span asp-validation-for="ObstacleHeight" class="text-red-500"></span>
            <p class="text-sm text-gray-500">Obstacle Height must be between 0 and 200 meters.</p>
        </div>

        <div class="sm:col-span-2">
            <label asp-for="ObstacleDescription" class="block mb-1 font-medium text-gray-700">Obstacle Description</label>
            <textarea asp-for="ObstacleDescription" class="w-full border border-gray-300 rounded p-2"></textarea>
            <span asp-validation-for="ObstacleDescription" class="text-red-500"></span>
        </div>

        <div>
            <label asp-for="ObstacleLatitude" class="block mb-1 font-medium text-gray-700">Latitude</label>
            <input asp-for="ObstacleLatitude" class="w-full border border-gray-300 rounded p-2" readonly />
        </div>

        <div>
            <label asp-for="ObstacleLongitude" class="block mb-1 font-medium text-gray-700">Longitude</label>
            <input asp-for="ObstacleLongitude" class="w-full border border-gray-300 rounded p-2" readonly />
        </div>

        <div class="sm:col-span-2">
            <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded mt-4">
                Submit Data
            </button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    // Initialiser kartet
    var map = L.map('map').setView([58.1467, 7.9956], 12); // Kristiansand

    // Legg til OpenStreetMap fliser
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; OpenStreetMap contributors'
    }).addTo(map);

    var marker;
    var circle;
    var line;
    var latlngsLine = [];

    map.on('click', function(e) {
        var shape = document.getElementById('shapeSelect').value;

        // Sett koordinater i skjema uavhengig av form
       document.getElementById('ObstacleLatitude').value = e.latlng.lat.toFixed(5);
       document.getElementById('ObstacleLongitude').value = e.latlng.lng.toFixed(5);


        if(shape === 'marker') {
            if(marker) map.removeLayer(marker);
            marker = L.marker(e.latlng).addTo(map);

            marker.on('click', function() {
                map.removeLayer(marker);
                marker = null;
            });
        }
        else if(shape === 'circle') {
            if(circle) map.removeLayer(circle);
            circle = L.circle(e.latlng, {
                color:'red',
                fillColor:'#f03',
                fillOpacity:0.5,
                radius:300
            }).addTo(map);

            circle.on('click', function() {
                map.removeLayer(circle);
                circle = null;
            });
        }
        else if(shape === 'line') {
            if(line) map.removeLayer(line);
            latlngsLine.push([e.latlng.lat, e.latlng.lng]);
            line = L.polyline(latlngsLine, {color:'black'}).addTo(map);

            line.on('click', function() {
                map.removeLayer(line);
                line = null;
                latlngsLine = [];
            });
        }
    });
</script>
<script>
    (function () {
      // These are the existing inputs your form already has
      const latInput = document.getElementById('ObstacleLatitude');
      const lngInput = document.getElementById('ObstacleLongitude');

      function applyPosition(lat, lng) {
        // Fill the form fields (keep 6 decimals; leave everything else as-is)
        if (latInput) latInput.value = Number(lat).toFixed(6);
        if (lngInput) lngInput.value = Number(lng).toFixed(6);

        // If your page already has 'map' and 'marker' from your current Leaflet code,
        // update them without touching any other logic.
        try {
          if (typeof map !== 'undefined') {
            if (typeof marker === 'undefined' || !marker) {
              // create a marker if your page hasn't yet
              window.marker = L.marker([lat, lng]).addTo(map);
            } else {
              marker.setLatLng([lat, lng]);
            }
            // center/zoom the map on your location
            map.setView([lat, lng], 14);
          }
        } catch (e) {
          // silently ignore if map/marker aren't available yet
          console.warn('Map centering skipped:', e);
        }
      }

      // Try to get the user's position automatically on page load
      if ('geolocation' in navigator) {
        navigator.geolocation.getCurrentPosition(
          function (pos) {
            applyPosition(pos.coords.latitude, pos.coords.longitude);
          },
          function (err) {
            // Do nothing if denied/unavailable; your page keeps working as before
            console.warn('Geolocation denied/unavailable:', err && err.message);
          },
          { enableHighAccuracy: true, timeout: 7000, maximumAge: 0 }
        );
      }
    })();
</script>
