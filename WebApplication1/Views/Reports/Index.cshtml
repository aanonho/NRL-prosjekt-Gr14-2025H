@model WebApplication1.Models.ReportsIndexViewModel

@{
    ViewData["Title"] = "Raports";
}

<div class="container mx-auto px-4 mt-6">
    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <!-- Header -->
        <div class="bg-green-500 text-white px-4 py-3 flex items-center justify-between">
            <h1 class="text-xl sm:text-2xl font-bold">Raports</h1>
            <p class="text-sm opacity-90">
                Showing <strong>@Model.FilteredCount</strong> of <strong>@Model.TotalCount</strong> reports —
                <span class="text-green-100">Submitted:</span> <strong>@Model.SubmittedCount</strong>,
                <span class="text-yellow-100">Drafts:</span> <strong>@Model.DraftCount</strong>
            </p>
        </div>

        <!-- Filters -->
        <form method="get" class="p-4 grid grid-cols-1 sm:grid-cols-3 gap-4 border-b">
            <!-- Status -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Status</label>
                <select name="status" class="w-full border border-gray-300 rounded p-2">
                    <option value="all" selected="@(Model.Status == "all")">All</option>
                    <option value="Pending" selected="@(Model.Status == "Pending")">Pending</option>
                    <option value="Approved" selected="@(Model.Status == "Approved")">Approved</option>
                    <option value="Rejected" selected="@(Model.Status == "Rejected")">Rejected</option>
                    <option value="submitted" selected="@(Model.Status == "submitted")">Submitted</option>
                    <option value="draft" selected="@(Model.Status == "draft")">Draft</option>
                </select>
            </div>

            <!-- Sort by date -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Date</label>
                <select name="sort" class="w-full border border-gray-300 rounded p-2">
                    <option value="date_desc" selected="@(Model.Sort == "date_desc")">Newest first</option>
                    <option value="date_asc" selected="@(Model.Sort == "date_asc")">Oldest first</option>
                </select>
            </div>

            <!-- Organization -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-1">Organization</label>
                <input name="organization"
                       value="@Model.Organization"
                       placeholder="e.g., NLA, Luftforsvaret"
                       class="w-full border border-gray-300 rounded p-2" />
            </div>

            <div class="sm:col-span-3 flex gap-2">
                <button type="submit" class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded">Apply</button>
                <a href="@Url.Action("Index", "Reports")" class="px-4 py-2 rounded border">Reset</a>
            </div>
        </form>

        <!-- Table -->
        <div class="p-4 overflow-x-auto">
            @if (Model.Reports == null || Model.Reports.Count == 0)
            {
                <div class="text-gray-600">No reports found.</div>
            }
            else
            {
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Title</th>
                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Organization</th>
                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Height (m)</th>
                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lat</th>
                            <th class="px-3 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lng</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        @foreach (var r in Model.Reports)
                        {
                            <tr class="hover:bg-gray-50" @(r.IsDraft ? "bg-yellow-100" : "")">
                                <td class="px-3 py-2 whitespace-nowrap text-sm text-gray-700">
                                    @r.CreatedAt.ToLocalTime().ToString("dd.MM.yyyy HH:mm")
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap text-sm text-gray-800">
                                    @(!string.IsNullOrWhiteSpace(r.Title) ? r.Title : "(no title)")
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap">
                                    @{
                                        var status = (r.Status ?? "Pending");
                                        var badge = "bg-yellow-100 text-yellow-800";
                                        if (status.Equals("Approved", System.StringComparison.OrdinalIgnoreCase))
                                        {
                                            badge = "bg-green-100 text-green-800";
                                        }
                                        else if (status.Equals("Rejected", System.StringComparison.OrdinalIgnoreCase))
                                        {
                                            badge = "bg-red-100 text-red-800";
                                        }
                                    }
                                    <span class="text-xs px-2 py-1 rounded @badge">@status</span>
                                    @if (r.IsDraft)
                                    {
                                        <span class="text-xs px-2 py-1 rounded bg-yellow-200 text-yellow-900 ml-2">Draft</span>
                                    }
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap text-sm text-gray-700">
                                    @(string.IsNullOrWhiteSpace(r.Organization) ? "Unknown" : r.Organization)
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap text-sm text-gray-700">
                                    @(r.Height?.ToString("0.##") ?? "-")
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap text-sm text-gray-700">
                                    @(r.Latitude?.ToString(System.Globalization.CultureInfo.InvariantCulture) ?? "-")
                                </td>
                                <td class="px-3 py-2 whitespace-nowrap text-sm text-gray-700">
                                    @(r.Longitude?.ToString(System.Globalization.CultureInfo.InvariantCulture) ?? "-")
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div> <!-- /.bg-white card -->
</div>     <!-- /.container -->
